name: Tests

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PYTHON_VERSION: 3.11
  DB_ENGINE: django.db.backends.postgresql
  DB_NAME: test_database
  DB_USER: test_user
  DB_PASSWORD: test_password
  DB_HOST: localhost
  DB_PORT: 5432

jobs:
  tests:
    if: |
      github.actor != 'dependabot[bot]' &&
      !startsWith(github.event.pull_request.title, 'wip') &&
      !contains(github.event.pull_request.title, '(wip)') &&
      !contains(github.event.pull_request.title, '[wip]') &&
      !contains(github.event.pull_request.title, 'work in progress')
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ env.DB_NAME }}
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt

      - name: Install Requirements
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run migrations
        run: |
          python manage.py migrate
        env:
          DB_NAME: ${{ env.DB_NAME }}
          DB_USER: ${{ env.DB_USER }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
          DB_HOST: ${{ env.DB_HOST }}
          DB_PORT: ${{ env.DB_PORT }}

      - name: Run tests
        run: |
          python manage.py test
        env:
          DB_ENGINE: ${{ env.DB_ENGINE }}
          DB_NAME: ${{ env.DB_NAME }}
          DB_USER: ${{ env.DB_USER }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
          DB_HOST: ${{ env.DB_HOST }}
          DB_PORT: ${{ env.DB_PORT }}
